--===================== drop 테이블&시퀀스=============================
EXECUTE DROP_ALL;
CREATE OR REPLACE PROCEDURE DROP_ALL
IS
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE CART';
    EXECUTE IMMEDIATE 'DROP SEQUENCE CART_SEQ';
    EXECUTE IMMEDIATE 'DROP TABLE MATCHS';
    EXECUTE IMMEDIATE 'DROP SEQUENCE MATCHS_SEQ';
    EXECUTE IMMEDIATE 'DROP TABLE USERT';
    EXECUTE IMMEDIATE 'DROP SEQUENCE USERT_SEQ';
    EXECUTE IMMEDIATE 'DROP TABLE EXERCISE';
    EXECUTE IMMEDIATE 'DROP SEQUENCE EXERCISE_SEQ';
END;
/
SHOW ERROR;

--===================== create 테이블&시퀀스=============================
EXECUTE CREATE_ALL;
CREATE OR REPLACE PROCEDURE CREATE_ALL
IS
BEGIN
    --USER 테이블 생성
    EXECUTE IMMEDIATE 'CREATE TABLE USERT(
    U_NO NUMBER NOT NULL,               --PK 일련번호
    U_ID NVARCHAR2(20) NOT NULL,        --회원 아이디
    U_PW NVARCHAR2(20) NOT NULL,        --회원 비밀번호
    U_NAME NCHAR(4) NOT NULL,           --회원 이름
    U_PHONE NCHAR(13) NOT NULL,         --회원 전화번호
    IS_INSTRUCTOR NCHAR(1) NOT NULL     --강사 여부
    )';
    --USERT 제약조건
    EXECUTE IMMEDIATE 'ALTER TABLE USERT ADD CONSTRAINT USERT_PK PRIMARY KEY (U_NO)';
    EXECUTE IMMEDIATE 'ALTER TABLE USERT ADD CONSTRAINT USERT_ID_UK UNIQUE (U_ID)';
    EXECUTE IMMEDIATE 'ALTER TABLE USERT ADD CONSTRAINT USERT_PHONE_UK UNIQUE (U_PHONE)';
    EXECUTE IMMEDIATE 'ALTER TABLE USERT
                        ADD CONSTRAINT USERT_CHK CHECK (IS_INSTRUCTOR IN (''Y'', ''N''))';
    --USERT SEQUENCE 생성
    EXECUTE IMMEDIATE 'CREATE SEQUENCE USERT_SEQ START WITH 1 INCREMENT BY 1';
    
    --EXERCISE 테이블 생성
    EXECUTE IMMEDIATE 'CREATE TABLE EXERCISE(
    E_NO NUMBER NOT NULL,               --PK 강의 코드(일련번호)
    E_NAME NVARCHAR2(8) NOT NULL,       --강의 운동 종목
    E_PRICE NUMBER(6),                  --강의비
    E_DATE NCHAR(8) NOT NULL,           --강의 날짜
    E_TIME NCHAR(6) NOT NULL,           --강의 시간
    E_ADDR NVARCHAR2(50) NOT NULL,      --강의 주소
    E_MEMCOUNT NUMBER(2) NOT NULL,      --신청 인원
    E_MAXMEM NUMBER(2) NOT NULL         --최대 정원
)';
    --EXERCISE 제약조건
    EXECUTE IMMEDIATE 'ALTER TABLE EXERCISE ADD CONSTRAINT EXERCISE_PK PRIMARY KEY (E_NO)';
    EXECUTE IMMEDIATE 'ALTER TABLE EXERCISE MODIFY (E_MEMCOUNT DEFAULT 0)';
    --EXERCISE SEQ 생성
    EXECUTE IMMEDIATE 'CREATE SEQUENCE EXERCISE_SEQ START WITH 1 INCREMENT BY 1';

    --CART 테이블 생성
    EXECUTE IMMEDIATE 'CREATE TABLE CART(
    C_NO NUMBER NOT NULL,               --PK 카트 일련번호
    U_ID NVARCHAR2(20) NOT NULL,        --수강 신청한 회원 아이디
    E_NO NUMBER NOT NULL,               --강의 코드
    C_ENROLLMENT_DATE DATE NOT NULL,    --강의 신청 날짜
    C_PAYMENT_STATUS NCHAR(1) NOT NULL  --결제 여부
)';
    --CART 제약조건
    EXECUTE IMMEDIATE 'ALTER TABLE CART ADD CONSTRAINT CART_PK PRIMARY KEY (C_NO)';
    EXECUTE IMMEDIATE 'ALTER TABLE CART ADD CONSTRAINT CART_USERT_FK FOREIGN KEY (U_ID)
                        REFERENCES USERT (U_ID) ON DELETE CASCADE';
    EXECUTE IMMEDIATE 'ALTER TABLE CART ADD CONSTRAINT CART_EXERCISE_FK FOREIGN KEY (E_NO)
                        REFERENCES EXERCISE (E_NO) ON DELETE CASCADE';
    EXECUTE IMMEDIATE 'ALTER TABLE CART MODIFY (C_ENROLLMENT_DATE DEFAULT SYSDATE)';
    --CART SEQ 생성
    EXECUTE IMMEDIATE 'CREATE SEQUENCE CART_SEQ START WITH 1 INCREMENT BY 1';
    
    --MATCHS 테이블
    EXECUTE IMMEDIATE 'CREATE TABLE MATCHS(
    M_NO NUMBER NOT NULL,               --PK 일련번호
    INST_ID NVARCHAR2(20) NOT NULL,     --매칭된 강사 아이디
    MEM_ID NVARCHAR2(20) NOT NULL,      --매칭된 회원 아이디
    M_DATE DATE NOT NULL                --매칭 시작 날짜  
)';
    --MATCHS 제약조건
    EXECUTE IMMEDIATE 'ALTER TABLE MATCHS ADD CONSTRAINT MATCHS_PK PRIMARY KEY (M_NO)';
    EXECUTE IMMEDIATE 'ALTER TABLE MATCHS ADD CONSTRAINT MATCHS_USERT_FK_INST FOREIGN KEY (INST_ID)
                        REFERENCES USERT (U_ID) ON DELETE CASCADE';
    EXECUTE IMMEDIATE 'ALTER TABLE MATCHS ADD CONSTRAINT MATCHS_USERT_FK_MEM FOREIGN KEY (MEM_ID)
                        REFERENCES USERT (U_ID) ON DELETE CASCADE';
    EXECUTE IMMEDIATE 'ALTER TABLE MATCHS MODIFY (M_DATE DEFAULT SYSDATE)';
    EXECUTE IMMEDIATE 'ALTER TABLE MATCHS ADD CONSTRAINT MATCHS_MEM_ID_UK UNIQUE (MEM_ID)';
    --MATCHS SEQ 생성
    EXECUTE IMMEDIATE 'CREATE SEQUENCE MATCHS_SEQ START WITH 1 INCREMENT BY 1';
END;
/
SHOW ERROR;

--================================ insert 레코드=============================
execute INSERT_TBL;
create or replace procedure INSERT_TBL
is
begin
    --USERT INSERT
    INSERT INTO USERT VALUES (USERT_SEQ.NEXTVAL, 'tngus1234', '1234', '김수현', '010-1111-1111', 'Y');
    INSERT INTO USERT VALUES (USERT_SEQ.NEXTVAL, 'wjdtn1234', '1234', '김정수', '010-2222-2222', 'N');
    --EXERCISE INSERT
    INSERT INTO EXERCISE VALUES (EXERCISE_SEQ.NEXTVAL, '축구', '50000', '20240521', '09:00', '서울시 서초구 양재동', 0, 20);
    INSERT INTO EXERCISE VALUES (EXERCISE_SEQ.NEXTVAL, '야구', '40000', '20240522', '10:00', '경기도 부천시 소사동', 0, 24);
    INSERT INTO EXERCISE VALUES (EXERCISE_SEQ.NEXTVAL, '농구', '60000', '20240523', '11:00', '경기도 광명시 소하동', 0, 12);
    INSERT INTO EXERCISE VALUES (EXERCISE_SEQ.NEXTVAL, '야구', '30000', '20240524', '12:00', '경기도 부천시 역곡동', 0, 24);
    INSERT INTO EXERCISE VALUES (EXERCISE_SEQ.NEXTVAL, '축구', '25000', '20240525', '13:00', '경기도 광명시 철산동', 0, 20);
end;
/
show error;


GRANT EXECUTE ON CREATE_ALL TO TEAMFIT;
GRANT EXECUTE ON DROP_ALL TO TEAMFIT;
GRANT CREATE ANY TABLE TO TEAMFIT;
GRANT DROP ANY TABLE TO TEAMFIT;
GRANT SELECT, INSERT, UPDATE, DELETE ON USERT TO TEAMFIT;
GRANT SELECT, INSERT, UPDATE, DELETE ON EXERCISE TO TEAMFIT;
GRANT SELECT, INSERT, UPDATE, DELETE ON CART TO TEAMFIT;
GRANT SELECT, INSERT, UPDATE, DELETE ON MATCHS TO TEAMFIT;
GRANT CREATE SEQUENCE TO TEAMFIT;
GRANT SELECT ON USERT_SEQ TO TEAMFIT;
GRANT SELECT ON EXERCISE_SEQ TO TEAMFIT;
GRANT SELECT ON CART_SEQ TO TEAMFIT;
GRANT SELECT ON MATCHS_SEQ TO TEAMFIT;